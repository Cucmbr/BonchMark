@inherits LayoutComponentBase
@inject NavigationManager Navigation

    @Body

@if (Navigation.Uri != "https://0.0.0.0/")
{
	<div class="bot_nav_bar">
		<div class="btn_timetable" style="@timestyle" @onclick="OnButtonTimetable"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M256 0a256 256 0 1 1 0 512A256 256 0 1 1 256 0zM232 120V256c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2V120c0-13.3-10.7-24-24-24s-24 10.7-24 24z" /></svg></div>
        <div class="btn_markpage" style="@markstyle" @onclick="OnButtonMarkpage"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path d="M575.8 255.5c0 18-15 32.1-32 32.1h-32l.7 160.2c0 2.7-.2 5.4-.5 8.1V472c0 22.1-17.9 40-40 40H456c-1.1 0-2.2 0-3.3-.1c-1.4 .1-2.8 .1-4.2 .1H416 392c-22.1 0-40-17.9-40-40V448 384c0-17.7-14.3-32-32-32H256c-17.7 0-32 14.3-32 32v64 24c0 22.1-17.9 40-40 40H160 128.1c-1.5 0-3-.1-4.5-.2c-1.2 .1-2.4 .2-3.6 .2H104c-22.1 0-40-17.9-40-40V360c0-.9 0-1.9 .1-2.8V287.6H32c-18 0-32-14-32-32.1c0-9 3-17 10-24L266.4 8c7-7 15-8 22-8s15 2 21 7L564.8 231.5c8 7 12 15 11 24z" /></svg></div>
        <div class="nav_bar_loading" style="@loadingstyle"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M304 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zm0 416a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM48 304a48 48 0 1 0 0-96 48 48 0 1 0 0 96zm464-48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM142.9 437A48 48 0 1 0 75 369.1 48 48 0 1 0 142.9 437zm0-294.2A48 48 0 1 0 75 75a48 48 0 1 0 67.9 67.9zM369.1 437A48 48 0 1 0 437 369.1 48 48 0 1 0 369.1 437z" /></svg></div>
    </div>
}

@code {
    private string timestyle;
    private string markstyle = "display: none;";
    private string loadingstyle = "display: none;";

    private void OnButtonMarkpage()
    {
        Navigation.NavigateTo("/mark");
        timestyle = "display: block;";
        markstyle = "display: none;";
    }
    private async Task OnButtonTimetable()
    {
        timestyle = "display: none;";
        loadingstyle = "display: block;";

        if (await App.Timetabling)
        {
            foreach (var day in App.Days)
            {
                switch (day.Date.DayOfWeek)
                {
                    case DayOfWeek.Monday:
                        App.Week[0] = day;
                        break;
                    case DayOfWeek.Tuesday:
                        App.Week[1] = day;
                        break;
                    case DayOfWeek.Wednesday:
                        App.Week[2] = day;
                        break;
                    case DayOfWeek.Thursday:
                        App.Week[3] = day;
                        break;
                    case DayOfWeek.Friday:
                        App.Week[4] = day;
                        break;
                    case DayOfWeek.Saturday:
                        App.Week[5] = day;
                        break;
                }
            }

            for (int i = 0; i < App.Week.Length; i++)
            {
                if (App.Week[i] == null)
                {
                    if (i == 0)
                    {
                        int j = 1;
                        while (App.Week[j] == null)
                        {
                            j++;
                        }
                        App.Week[i] = new DayInfo() { Date = App.Week[j].Date.AddDays(-j) };
                    }
                    else
                    {
                        int j = i;
                        while (App.Week[j] == null)
                        {
                            j--;
                        }
                        App.Week[i] = new DayInfo() { Date = App.Week[j].Date.AddDays(i - j) };
                    }
                }
            }

            loadingstyle = "display: none;";
            markstyle = "display: block;";
            Navigation.NavigateTo("/timetable");
        }
	}
}